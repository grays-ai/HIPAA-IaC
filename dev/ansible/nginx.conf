# TODO (amiller68): I wasn't sure how to load our reverse proxy to the docker container as a modules
# Therefore I just copied the base nginx.conf file and added the reverse proxy config to it
# This should be fixed in the future

# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
   # include /etc/nginx/conf.d/*.conf;

    upstream django_service {
        server localhost:8000;
    }

    # NginX Configuration File
    server {
        # Listen on port 80
        listen 80;

        location / {
            proxy_pass http://django_service;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
       }

       location /static/ {
            alias /var/www/staticfiles/;
       }
# If you plan on serving cert files from the server, uncomment the following lines
# Don't forget to configure the Ansible correctly
#        loocation /certs/ {
#             alias /var/www/certs/;
#        }
    }
}